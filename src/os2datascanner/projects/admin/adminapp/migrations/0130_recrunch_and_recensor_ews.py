# Generated by Django 3.2.11 on 2024-04-23 09:20

from django.db import models, migrations
from django.db.models.functions import Cast

from os2datascanner.utils.batch import BatchUpdate
from os2datascanner.engine2.model.core import Handle


def recrunch_and_recensor(apps, schema_editor):
    ScheduledCheckup = apps.get_model('os2datascanner', 'ScheduledCheckup')

    with BatchUpdate(
            ScheduledCheckup.objects,
            ["path", "handle_representation"]) as batch:
        # We want to do a text comparison on a binary (JSONB) field, so we need
        # to make a synthetic field to do that (note that icontains does this
        # automatically, but may be less efficient due to the UPPER() call)
        candidate_objs = ScheduledCheckup.objects.annotate(
                hrep_text=Cast("handle_representation",
                output_field=models.TextField()))
        candidate_objs = candidate_objs.filter(hrep_text__contains='"ews"')

        for checkup in candidate_objs.order_by("-pk").iterator():
            handle = Handle.from_json_object(checkup.handle_representation)
            handle = handle.censor()

            checkup.path = handle.crunch(hash=True)
            checkup.handle_representation = handle.to_json_object()

            batch.append(checkup)

    print(f"Updated {batch.count} ScheduledCheckups")


class Migration(migrations.Migration):

    dependencies = [
        ('os2datascanner', '0129_exchangescanner_grant'),
    ]

    operations = [
        migrations.RunPython(
                recrunch_and_recensor,
                reverse_code=migrations.RunPython.noop)
    ]
