# Generated by Django 3.2.11 on 2024-09-04 06:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('import_services', '0025_ldapconfig_import_managers'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthenticationFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flow_name', models.CharField(max_length=255, unique=True)),
                ('realm', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='authentication_flows', to='import_services.realm')),
            ],
        ),
        migrations.CreateModel(
            name='IdentityProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_id', models.CharField(default='saml', editable=False, max_length=255)),
                ('alias', models.CharField(default='SAML-SSO', editable=False, max_length=255)),
                ('metadata_url', models.CharField(blank=True, help_text='should be a reachable url providing federation metadata in xml format ', max_length=510, null=True, verbose_name='metadata url')),
                ('entity_id', models.CharField(help_text='entity id of the service provider', max_length=255, verbose_name='service provider entity id')),
                ('idp_entity_id', models.CharField(help_text='entity id of the identity provider', max_length=255, verbose_name='identity provider entity id')),
                ('single_sign_on_service_url', models.CharField(help_text='The url that must be used to send authentication requests (SAML AuthnRequest).', max_length=255, verbose_name='Single Sign-On service url')),
                ('single_logout_service_url', models.CharField(blank=True, help_text='The url that must be used to send logout requests.', max_length=255, null=True, verbose_name='Single logout service url')),
                ('nameid_policy_format', models.CharField(choices=[('urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified', 'Unspecified'), ('urn:oasis:names:tc:SAML:2.0:nameid-format:persistent', 'Persistent'), ('urn:oasis:names:tc:SAML:2.0:nameid-format:transient', 'Transient'), ('urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress', 'Email')], default='urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified', help_text='Specifies the URI reference corresponding to a name identifier format.', max_length=255, verbose_name='nameid policy format')),
                ('principal_type', models.CharField(choices=[('SUBJECT', 'Subject NameID'), ('ATTRIBUTE', 'Attribute Name'), ('FRIENDLY_ATTRIBUTE', 'Attribute Friendly Name')], default='SUBJECT', help_text='Way to identify and track external users from the assertion. Default is using Subject NameID, alternatively you can set up identifying attribute.', max_length=255, verbose_name='principal type')),
                ('principal_attr', models.CharField(blank=True, help_text="Name or Friendly Name of the attribute used to identify external users. Only relevant if principal type is set to an 'Attribute' option. ", max_length=255, null=True, verbose_name='principal attribute')),
                ('post_binding_response', models.BooleanField(default=False, help_text='Indicates whether to respond to requests using HTTP-POST binding. If off, HTTP-REDIRECT binding will be used.', verbose_name='HTTP-POST binding response')),
                ('post_binding_authn_request', models.BooleanField(default=False, help_text='Indicates whether the AuthnRequest must be sent using HTTP-POST binding. If off, HTTP-REDIRECT binding will be used.', verbose_name='HTTP-POST binding for AuthnRequest')),
                ('post_binding_logout', models.BooleanField(default=False, help_text='Indicates whether to respond to requests using HTTP-POST binding. If off, HTTP-REDIRECT binding will be used.', verbose_name='HTTP-POST binding logout')),
                ('authn_requests_signed', models.BooleanField(default=False, help_text='Indicates whether the identity provider expects a signed AuthnRequest.', verbose_name='AuthnRequests signed')),
                ('assertions_signed', models.BooleanField(default=False, help_text='Indicates whether this service provider expects a signed Assertion.', verbose_name='Assertions signed')),
                ('allowed_clock_skew', models.FloatField(default=0, help_text='Clock skew in seconds that is tolerated when validating identity provider tokens. ', verbose_name='allowed clock skew')),
                ('realm', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='providers', to='import_services.realm')),
            ],
        ),
        migrations.CreateModel(
            name='KeycloakClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.CharField(default='openid-connect', editable=False, max_length=255)),
                ('client_id', models.CharField(max_length=255)),
                ('root_url', models.CharField(max_length=255)),
                ('redirect_uri', models.CharField(default='*', max_length=255)),
                ('realm', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='import_services.realm')),
            ],
        ),
        migrations.CreateModel(
            name='IdPMappers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saml_attr', models.CharField(max_length=255)),
                ('keycloak_attr', models.CharField(max_length=255)),
                ('idp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mappers', to='import_services.identityprovider')),
            ],
        ),
        migrations.CreateModel(
            name='FlowExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=255)),
                ('exec_flow_id', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flow_executions', to='import_services.authenticationflow')),
                ('realm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flow_executions', to='import_services.realm')),
            ],
        ),
    ]
