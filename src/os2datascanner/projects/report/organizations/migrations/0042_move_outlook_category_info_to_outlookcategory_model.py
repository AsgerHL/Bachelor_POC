# Generated by Django 3.2.11 on 2024-03-22 08:50

from django.db import migrations, models
import django.db.models.deletion


def move_category_uuids_to_new_model(apps, schema_editor):
    AccountOutlookSetting = apps.get_model('organizations', 'AccountOutlookSetting')
    OutlookCategory = apps.get_model('organizations', 'OutlookCategory')

    for setting in AccountOutlookSetting.objects.iterator():
        if setting.false_positive_category_uuid:
            colour = setting.false_positive_colour or "Preset19"
            OutlookCategory.objects.create(
                    category_uuid=setting.false_positive_category_uuid, 
                    category_name="OS2datascanner False Positive", 
                    category_colour=colour, 
                    account_outlook_setting=setting, 
                    name="false_positive")
        if setting.match_category_uuid:
            colour = setting.match_colour or "Preset15"
            OutlookCategory.objects.create(
                    category_uuid=setting.match_category_uuid, 
                    category_name="OS2datascanner Match", 
                    category_colour=colour, 
                    account_outlook_setting=setting, 
                    name="match")

def move_category_uuids_back_to_old_model(apps, schema_editor):
    AccountOutlookSetting = apps.get_model('organizations', 'AccountOutlookSetting')
    OutlookCategory = apps.get_model('organizations', 'OutlookCategory')

    for cat in OutlookCategory.objects.iterator():
        setting = cat.account_outlook_setting
        if cat.name == "false_positive":
            setting.false_positive_category_uuid = cat.category_uuid
            setting.false_positive_colour = cat.category_colour
        elif cat.name == "match":
            setting.match_category_uuid = cat.category_uuid
            setting.match_colour = cat.category_colour
        setting.save()

class Migration(migrations.Migration):

    dependencies = [
        ('organizations', '0041_alias_shared'),
    ]

    operations = [
        migrations.CreateModel(
            name='OutlookCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_uuid', models.CharField(blank=True, max_length=36, null=True, verbose_name='category UUID')),
                ('category_name', models.CharField(default='OSdatascanner Match', max_length=256, verbose_name='category name')),
                ('category_colour', models.CharField(choices=[('Preset0', 'Red'), ('Preset1', 'Orange'), ('Preset2', 'Brown'), ('Preset3', 'Yellow'), ('Preset4', 'Green'), ('Preset5', 'Teal'), ('Preset6', 'Olive'), ('Preset7', 'Blue'), ('Preset8', 'Purple'), ('Preset9', 'Cranberry'), ('Preset10', 'Steel'), ('Preset11', 'Dark Steel'), ('Preset12', 'Gray'), ('Preset13', 'Dark Gray'), ('Preset14', 'Black'), ('Preset15', 'Dark Red'), ('Preset16', 'Dark Orange'), ('Preset17', 'Dark Brown'), ('Preset18', 'Dark Yellow'), ('Preset19', 'Dark Green'), ('Preset20', 'Dark Teal'), ('Preset21', 'Dark Olive'), ('Preset22', 'Dark Blue'), ('Preset23', 'Dark Purple'), ('Preset24', 'Dark Cranberry')], default='Preset15', max_length=10, verbose_name='category colour')),
                ('name', models.CharField(choices=[('match', 'match'), ('false_positive', 'false positive')], default='match', max_length=20, verbose_name='name')),
                ('account_outlook_setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outlook_categories', to='organizations.accountoutlooksetting', verbose_name='account Outlook setting')),
            ],
        ),
        migrations.RunPython(move_category_uuids_to_new_model, reverse_code=move_category_uuids_back_to_old_model),
        migrations.RemoveField(
            model_name='accountoutlooksetting',
            name='false_positive_category_uuid',
        ),
        migrations.RemoveField(
            model_name='accountoutlooksetting',
            name='false_positive_colour',
        ),
        migrations.RemoveField(
            model_name='accountoutlooksetting',
            name='match_category_uuid',
        ),
        migrations.RemoveField(
            model_name='accountoutlooksetting',
            name='match_colour',
        ),
    ]
